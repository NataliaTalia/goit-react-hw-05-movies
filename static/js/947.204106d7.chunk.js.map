{"version":3,"file":"static/js/947.204106d7.chunk.js","mappings":"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","sources":["components/APIs.js","components/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const getTrendingMovies = async () => {\n  const trendingOptions = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNzhiMWJkMjk1YWUyZGI4YWYzMjhjNWE5ZDQzMGE3NyIsInN1YiI6IjY0N2IxYmE1ZTMyM2YzMDEwNjE1MDc1MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vxLHfnX6-9KADyJ-ltI_WHyCFtNAuDJ1qUjAWK6Nndc',\n    },\n  };\n\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/all/week?language=en-US',\n      trendingOptions\n    );\n    if (!response.ok) {\n      throw new Error('Failed to fetch trending movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const getSearchedMovies = async movieName => {\n  const searchOptions = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNzhiMWJkMjk1YWUyZGI4YWYzMjhjNWE5ZDQzMGE3NyIsInN1YiI6IjY0N2IxYmE1ZTMyM2YzMDEwNjE1MDc1MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vxLHfnX6-9KADyJ-ltI_WHyCFtNAuDJ1qUjAWK6Nndc',\n    },\n  };\n\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${movieName}&language=en-US`,\n      searchOptions\n    );\n    if (!response.ok) {\n      throw new Error('Failed to fetch trending movies');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {}\n};\n\nexport const getMovieDetails = async movieId => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNzhiMWJkMjk1YWUyZGI4YWYzMjhjNWE5ZDQzMGE3NyIsInN1YiI6IjY0N2IxYmE1ZTMyM2YzMDEwNjE1MDc1MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vxLHfnX6-9KADyJ-ltI_WHyCFtNAuDJ1qUjAWK6Nndc',\n    },\n  };\n\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    );\n    if (!response.ok) {\n      throw new Error('Failed to fetch trending movies');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'components/APIs';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n\n  const backLinkLocationRef = useRef(\n    location.state?.from || location.pathname === '/' ? '/movies' : '/'\n  );\n\n  const [genreIds, setGenreIds] = useState([]);\n\n  console.log('location of movie detaisl', location);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n\n        setMovieDetails(data);\n        if (data && data.genres) {\n          setGenreIds(data.genres);\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const { poster_path, title, overview, vote_average } = movieDetails || {};\n\n  const placeholder = 'https://placehold.co/200x300/blue/yellow?text=No+Image';\n\n  const movieImage = poster_path\n    ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n    : placeholder;\n\n  //\n  const genreNames = genreIds ? genreIds.map(genreId => genreId.name) : [];\n\n  function formatAsPercentage(num) {\n    return 100 - (100 - num * 10) + '%';\n  }\n\n  return (\n    <main>\n      <button type=\"button\">\n        <Link to={backLinkLocationRef.current}> Go back</Link>\n      </button>\n      <img src={movieImage} alt={title} />\n\n      <h2>{title}</h2>\n      <p>User Score: {formatAsPercentage(vote_average)}</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{genreNames.length > 0 ? genreNames.join(', ') : 'No genres found'}</p>\n      <hr />\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["getTrendingMovies","trendingOptions","method","headers","accept","Authorization","fetch","response","ok","Error","json","data","results","console","error","getSearchedMovies","movieName","searchOptions","getMovieDetails","movieId","options","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkLocationRef","useRef","state","from","pathname","genreIds","setGenreIds","log","useEffect","fetchMovieDetails","genres","message","num","poster_path","title","overview","vote_average","movieImage","genreNames","map","genreId","name","type","to","current","src","alt","length","join","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}