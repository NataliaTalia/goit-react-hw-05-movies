{"version":3,"file":"static/js/186.1c498e17.chunk.js","mappings":"gNA8DA,UA3DgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuCR,OArCAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,iGACbC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NANa,kBAWMC,MAAM,sCAAD,OACYT,EADZ,kCAE1BI,GAbe,cAWXM,EAXW,gBAgBEA,EAASC,OAhBX,OAgBXC,EAhBW,OAkBXC,EAAeD,EAAKE,QAE1BC,QAAQC,IAAI,wCAAyCH,GAErDd,EAAWc,GAtBM,kDAwBjBE,QAAQE,MAAM,+BAAd,MAxBiB,0DAAH,qDA2BlBd,GACD,GAAE,CAACH,KASF,wBACGF,EAAQoB,OAAS,EAChBpB,EAAQqB,KAAI,gBATKC,EASFC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,WAAhC,OACV,2BACE,0BAAI,aAAWF,EAAeG,aAC9B,uBAAIF,KACJ,wBAbaH,EAaKI,EAZJ,IAAIE,KAAKN,GAAMO,sBAStBN,EADC,KAQZ,uBAAG,0CAIV,C,sBC5DD,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpB,GAEP,YADAc,EAAOd,EAET,CAEImB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNzhiMWJkMjk1YWUyZGI4YWYzMjhjNWE5ZDQzMGE3NyIsInN1YiI6IjY0N2IxYmE1ZTMyM2YzMDEwNjE1MDc1MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vxLHfnX6-9KADyJ-ltI_WHyCFtNAuDJ1qUjAWK6Nndc',\n        },\n      };\n\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n          options\n        );\n\n        const data = await response.json();\n\n        const savedReviews = data.results;\n\n        console.log('here are saved reviews from the fetch', savedReviews);\n\n        setReviews(savedReviews);\n      } catch (error) {\n        console.error('Error while fetching reviews', error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  function formattedDate(date) {\n    const formattedDate = new Date(date).toLocaleString();\n\n    return formattedDate;\n  }\n\n  return (\n    <ul>\n      {reviews.length > 0 ? (\n        reviews.map(({ id, author_details, content, created_at }) => (\n          <li key={id}>\n            <h5>Username: {author_details.username}</h5>\n            <p>{content}</p>\n            <p>{formattedDate(created_at)}</p>\n          </li>\n        ))\n      ) : (\n        <p>We don't have reviews for this movie</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","options","method","headers","accept","Authorization","fetch","response","json","data","savedReviews","results","console","log","error","length","map","date","id","author_details","content","created_at","username","Date","toLocaleString","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}